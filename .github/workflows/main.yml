name: Blog Workflow

on:
  pull_request:
    branches:
      - new_changes
  push:
    branches:
      - new_changes

jobs:
  basic-health-job:
    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: github-actions
#        ports:
#          - 5432:5432
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./local.yml"
      - name: Check tests
          run: |
            docker-compose -f local.yml run web python manage.py test

#      - name: Install apt dependencies
#        run: |
#          sudo apt-get update
#          sudo apt-get upgrade -y
#          sudo apt-get install pandoc
#      - name: Setup python environment
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.8'
#
#      - name: Setup pip
#        run: |
#          python -m pip install --upgrade pip
#          pip install --upgrade --upgrade-strategy eager -r ./requirements.txt
#
##      - name: Check Migrations
##        env:
##          USE_DOCKER: true
##        run: |
##          python manage.py makemigrations --check --dry-run
#
##      - name: Run migrations
##        env:
##          USE_DOCKER: true
##          DJANGO_SETTINGS_MODULE: config.settings.local_gold
##        run: |
##          export DEBUG=0
##          export GITHUB_WORKFLOW=True
##          export MODE=workflow
##          python manage.py migrate
#
#      - name: Django Check
#        env:
#          SECRET_KEY: 'asdsadhuiu1247hyfewh7'
#          USE_DOCKER: true
#        run: |
#          export DEBUG=0
#          export GITHUB_WORKFLOW=True
#          export MODE=workflow
#          python manage.py check
#
#      - name: Django Tests
#        env:
#          SECRET_KEY: 'asdsadhuiu1247hyfewh7'
#        run: |
#          python manage.py test
          
