name: Golden Workflow

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  basic-health-job:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install apt dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install pandoc
      - name: Setup python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: '**/requirements/local.txt'# caching pip dependencies
      - name: Setup python environment
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -r requirements/local.txt
#      - name: Extract database from gzip format
#        run: gunzip .current_db/current_db.sql.gz

#      - name: Import DB seed data
#        run: psql -d postgresql://postgres@localhost/github-actions -f .current_db/current_db.sql
#        env:
#          PGPASSWORD: postgres
#
#      - name: Syntax Errors
#        run: |
#          pip install flake8
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=140 --statistics
#      - name: Scribe Must be migrations
#        env:
#          USE_DOCKER: true
#        run: |
#          python manage.py makemigrations scribe
#          python manage.py migrate scribe
#      - name: Check Migrations
#        env:
#          USE_DOCKER: true
#        run: |
#          python manage.py makemigrations --check --dry-run
#      - name: Run migrations
#        env:
#          USE_DOCKER: true
#          DJANGO_SETTINGS_MODULE: config.settings.local_gold
#        run: |
#          export DEBUG=0
#          export GITHUB_WORKFLOW=True
#          export MODE=workflow
##          python manage.py migrate sites
#          python manage.py migrate
#      - name: Django Check
#        env:
#          USE_DOCKER: true
#        run: |
#          export DEBUG=0
#          export GITHUB_WORKFLOW=True
#          export MODE=workflow
#          python manage.py check
#          python manage.py tests